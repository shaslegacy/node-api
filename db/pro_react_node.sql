-- phpMyAdmin SQL Dump
-- version 5.1.1
-- https://www.phpmyadmin.net/
--
-- Host: localhost:3306
-- Generation Time: May 13, 2022 at 05:53 PM
-- Server version: 8.0.23
-- PHP Version: 8.0.11

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `pro_react_node`
--

-- --------------------------------------------------------

--
-- Table structure for table `comments`
--

CREATE TABLE `comments` (
  `id` int NOT NULL,
  `commentsBody` varchar(255) NOT NULL,
  `createdAt` datetime NOT NULL,
  `updatedAt` datetime NOT NULL,
  `PostId` int DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `comments`
--

INSERT INTO `comments` (`id`, `commentsBody`, `createdAt`, `updatedAt`, `PostId`) VALUES
(1, 'awesome post from admin', '2021-09-26 18:23:07', '2021-09-26 18:23:07', 1),
(2, 'beautiful design from admin side', '2021-09-26 18:23:32', '2021-09-26 18:23:32', 1),
(3, 'Raymond seen from admin side', '2021-09-26 18:23:45', '2021-09-26 18:23:45', 1),
(4, 'Samroo from admin side', '2021-09-26 18:24:14', '2021-09-26 18:24:14', 2);

-- --------------------------------------------------------

--
-- Table structure for table `employee`
--

CREATE TABLE `employee` (
  `id` int NOT NULL,
  `name` varchar(150) NOT NULL,
  `position` varchar(150) NOT NULL,
  `salary` varchar(150) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `employee`
--

INSERT INTO `employee` (`id`, `name`, `position`, `salary`) VALUES
(1, 'Shashi', 'Senior Software Engineer', '50000'),
(2, 'Sarfraj', 'Software Engineer', '1000000'),
(3, 'Shashi Kant Ojha', 'Senior Software Engineer', '1500000'),
(5, 'asdr', 'sertt', '1236547'),
(6, 'Shashi Ojha', 'sss', '1222');

-- --------------------------------------------------------

--
-- Table structure for table `posts`
--

CREATE TABLE `posts` (
  `id` int NOT NULL,
  `title` varchar(255) NOT NULL,
  `postText` varchar(255) NOT NULL,
  `username` varchar(255) NOT NULL,
  `status` int NOT NULL,
  `is_deleted` int NOT NULL,
  `createdAt` datetime NOT NULL,
  `updatedAt` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `posts`
--

INSERT INTO `posts` (`id`, `title`, `postText`, `username`, `status`, `is_deleted`, `createdAt`, `updatedAt`) VALUES
(1, 'My legacy', 'It is my legacy not yours', 'Shashi Kant', 1, 0, '2021-09-25 18:19:40', '2021-09-25 18:19:40'),
(2, 'Testing 1', 'It is first test to manage data', 'Shashi', 1, 0, '2021-09-25 18:32:05', '2021-09-25 18:32:05'),
(3, 'Testing 2', 'It is Second test to manage data', 'Sonu', 1, 0, '2021-09-25 18:32:21', '2021-09-25 18:32:21'),
(4, 'React with redux', 'This is state container and managing state', 'Sonu', 1, 0, '2022-04-01 22:11:00', '2022-04-01 22:11:00'),
(5, 'How to become senior fullstack developer', 'Learn Frontend, backends technologies with DB', 'Abhi Ojha', 1, 1, '2022-04-01 23:11:24', '2022-04-01 23:11:24');

-- --------------------------------------------------------

--
-- Table structure for table `refreshtoken`
--

CREATE TABLE `refreshtoken` (
  `id` int NOT NULL,
  `token` text NOT NULL,
  `userId` int NOT NULL,
  `addedDate` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int NOT NULL,
  `first_name` varchar(150) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `gender` varchar(25) NOT NULL,
  `email` varchar(250) NOT NULL,
  `password` text NOT NULL,
  `mobile` varchar(20) NOT NULL,
  `createdby` int DEFAULT NULL,
  `created_date` datetime NOT NULL,
  `token` text CHARACTER SET utf8 COLLATE utf8_general_ci,
  `tokenAdded` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `first_name`, `last_name`, `gender`, `email`, `password`, `mobile`, `createdby`, `created_date`, `token`, `tokenAdded`) VALUES
(1, 'Shashi', 'Ojha', 'Male', 'shas.legacy@gmail.com', '$2b$10$nM8rFAXOrThjmTsCWHIBneY7VLxRU0U/JSVFgjpquiY8FYZTU.WAO', '9621399405', 0, '2022-04-02 01:12:08', '', '0000-00-00 00:00:00'),
(3, 'Sonu', 'Ojha', 'Male', 'shas.legacy2@gmail.com', '$2b$10$EBi1cUSbUK7KK76c6Ok7Se7IFEiEcKitzSojag55OLumkW6tfUDn2', '9621399405', 0, '2022-04-03 00:44:07', '', '0000-00-00 00:00:00'),
(4, 'Abhay', 'Ojha', 'Male', 'shas.legacy@gmail.com', '$2b$10$uGx2x7M8oWORKjRDdkLew.8UJwl8lYN6DG8x8WVh0PbqzN6qt5p6m', '9621399405', 0, '2022-04-05 00:27:03', '', '0000-00-00 00:00:00'),
(5, 'Sam', 'Ojha', 'Male', 'er.shashikantojha@gmail.com', '$2b$10$Nmfe2JvfrmU7eYhXgqd7huErrGTWLPyex5w8yhirqWXJws3Y2Zzaq', '9621399405', 0, '2022-04-05 00:27:52', '', '0000-00-00 00:00:00'),
(6, 'Sam', 'Ojha', 'Male', 'ojhasonu512@outlook.com', '$2b$10$GQrmc446XospaX2OJ7aRVOD5VQU4ij2fLnMJt7S1OYg7uwWr38mYu', '9621399405', 0, '2022-04-05 00:42:49', '', '0000-00-00 00:00:00'),
(7, 'Rohit', 'Singh', 'M', 'e2@e.com1', '$2b$10$Dyy0wE7XMSEtq6ovHQCrpuDDN2cUVfhcZzjxjMPbexZJE2ToHexny', '9999999999', NULL, '2022-05-07 21:23:53', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..pI8kC9noRdTr8ODBL485aDSgBxHJfK5Mvu-UWyyLiMA', '2022-05-08 04:59:45'),
(8, 'Rohit', 'Singh', 'M', 'e2@e.com1', '$2b$10$Lkj436B72zHR2QkoaJ9Iv.kB26Qxf1odlQoXzshbXySpYaSLdrcty', '9999999999', NULL, '2022-05-09 22:18:07', NULL, NULL);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `PostId` (`PostId`);

--
-- Indexes for table `employee`
--
ALTER TABLE `employee`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `refreshtoken`
--
ALTER TABLE `refreshtoken`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT for table `employee`
--
ALTER TABLE `employee`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT for table `posts`
--
ALTER TABLE `posts`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `refreshtoken`
--
ALTER TABLE `refreshtoken`
  MODIFY `id` int NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `comments`
--
ALTER TABLE `comments`
  ADD CONSTRAINT `comments_ibfk_1` FOREIGN KEY (`PostId`) REFERENCES `posts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
